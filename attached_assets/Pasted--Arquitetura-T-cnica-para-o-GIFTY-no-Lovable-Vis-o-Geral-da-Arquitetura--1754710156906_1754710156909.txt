# Arquitetura T√©cnica para o GIFTY no Lovable

## üåê Vis√£o Geral da Arquitetura

```
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                            FRONTEND & APIs                               ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ  Web App      ‚îÇ  Mobile App       ‚îÇ  Admin Panel      ‚îÇ  Public APIs      ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
        ‚îÇ                 ‚îÇ                   ‚îÇ                   ‚îÇ
        ‚ñº                 ‚ñº                   ‚ñº                   ‚ñº
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                        CAMADA DE APLICA√á√ÉO                                ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ  Node.js      ‚îÇ  Microsservi√ßos   ‚îÇ  ZK Endpoints     ‚îÇ  Database         ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
        ‚îÇ                 ‚îÇ                   ‚îÇ                   ‚îÇ
        ‚ñº                 ‚ñº                   ‚ñº                   ‚ñº
‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ                         BLOCKCHAIN LAYER                                  ‚îÇ
‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
‚îÇ  Smart        ‚îÇ  L2 Networks      ‚îÇ  Oracles          ‚îÇ  Payment          ‚îÇ
‚îÇ  Contracts    ‚îÇ  (Polygon/Base)   ‚îÇ  (Chainlink)      ‚îÇ  Validator        ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
```

## üß© Componentes Cr√≠ticos para Implementar no Lovable

### 1. Camada de Blockchain (Smart Contracts)

| Contrato | Fun√ß√£o | Status | Requisitos no Lovable |
|----------|--------|--------|----------------------|
| `ERC6551Registry` | Registry para criar Token Bound Accounts (TBAs) | Implementado | Deve ser deployado primeiro |
| `ERC6551Account` | Implementa√ß√£o da TBA para gerenciar saldo | Implementado | Deve ser usado como implementation do registry |
| `GiftCardNFT` | Contrato principal para gift cards NFT com saldo | Implementado | Deve ser deployado com registry e implementation |
| `UserOpManager` | Implementa√ß√£o do ERC-4337 para experi√™ncia "sem carteira" | Em desenvolvimento | Deve ser integrado com o GiftCardNFT |
| `GiftyZK` | Integra√ß√£o com ZK Proofs para privacidade | Em desenvolvimento | Deve ser integrado com o GiftCardNFT |

### 2. Camada de Aplica√ß√£o (Backend)

| Componente | Fun√ß√£o | Status | Requisitos no Lovable |
|------------|--------|--------|----------------------|
| `ZK Endpoints` | Gera√ß√£o e verifica√ß√£o de ZK Proofs | Em desenvolvimento | Deve ser integrado com o GiftyZK |
| `POS Integration` | Integra√ß√£o com Cielo para resgate em POS f√≠sico | Em desenvolvimento | Deve ser integrado com a interface do usu√°rio |
| `Payment Validator` | Valida√ß√£o de pagamentos e liquida√ß√£o | Implementado | Deve ser integrado com o GiftCardNFT |

### 3. Camada de Apresenta√ß√£o (Frontend)

| Componente | Fun√ß√£o | Status | Requisitos no Lovable |
|------------|--------|--------|----------------------|
| `Web App` | Interface para cria√ß√£o e gest√£o de gift cards | Em desenvolvimento | Deve integrar com o GiftCardNFT e UserOpManager |
| `Mobile App` | Aplicativo m√≥vel para usu√°rios | Em desenvolvimento | Deve integrar com o GiftCardNFT e UserOpManager |
| `Admin Panel` | Painel para gerenciamento de gift cards | Em desenvolvimento | Deve integrar com o GiftCardNFT |

## üîß Fluxo de Integra√ß√£o no Lovable

```
1. Usu√°rio cria um Gift Card NFT via Web App
   ‚îÇ
   ‚îú‚îÄ‚îÄ> Chama o contrato GiftCardNFT.createGiftCard()
   ‚îÇ
   ‚îî‚îÄ‚îÄ> Contrato gera TBA automaticamente usando ERC6551Registry
         ‚îÇ
         ‚îî‚îÄ‚îÄ> TBA recebe o saldo (USDC) via ERC20.transferFrom()
               ‚îÇ
               ‚îî‚îÄ‚îÄ> Saldo vinculado √† TBA (n√£o √† carteira do usu√°rio)

2. Usu√°rio recebe o Gift Card NFT
   ‚îÇ
   ‚îú‚îÄ‚îÄ> Gift Card √© enviado para a carteira do usu√°rio (NFT)
   ‚îÇ
   ‚îî‚îÄ‚îÄ> O usu√°rio n√£o precisa de carteira cripto para usar o Gift Card
         ‚îÇ
         ‚îî‚îÄ‚îÄ> Integra√ß√£o com UserOpManager (ERC-4337) permite transa√ß√µes sem ETH

3. Resgate do Gift Card no POS
   ‚îÇ
   ‚îú‚îÄ‚îÄ> Usu√°rio apresenta QR Code do Gift Card
   ‚îÇ
   ‚îú‚îÄ‚îÄ> POS gera QR Code com dados do Gift Card
   ‚îÇ
   ‚îî‚îÄ‚îÄ> Aplicativo m√≥vel gera prova ZK (via ZK Endpoints)
         ‚îÇ
         ‚îî‚îÄ‚îÄ> Prova ZK √© enviada para GiftyZK.redeemWithProof()
               ‚îÇ
               ‚îî‚îÄ‚îÄ> Contrato verifica a prova e transfere saldo para o comerciante
```

## üìå Prioridade de Implementa√ß√£o no Lovable

1. **Camada Blockchain (MVP)**
   - [ ] Implementar e deployar `ERC6551Registry`
   - [ ] Implementar e deployar `ERC6551Account`
   - [ ] Implementar e deployar `GiftCardNFT`

2. **Camada de Aplica√ß√£o**
   - [ ] Implementar `UserOpManager` (ERC-4337)
   - [ ] Implementar `ZK Endpoints` (gera√ß√£o de provas ZK)

3. **Camada de Apresenta√ß√£o**
   - [ ] Implementar Web App para cria√ß√£o de gift cards
   - [ ] Implementar fluxo de resgate com ZK Proofs

## üìä M√©tricas de Sucesso

| M√©trica | Meta | Como Medir no Lovable |
|---------|------|----------------------|
| Custo de emiss√£o | <0,5% (vs US$ 4-7 tradicional) | Comparar custo de emiss√£o com contrato |
| Tempo de resgate | <1 minuto | Medir tempo entre QR Code e liquida√ß√£o |
| UX sem carteira | >80% de usu√°rios conseguem usar sem carteira | NPS e taxas de convers√£o |
| Privacidade | 100% das transa√ß√µes com ZK Proofs | Contar transa√ß√µes com ZK Proofs |

## üìå Observa√ß√µes Importantes

1. **Para a experi√™ncia "sem carteira cripto"**:
   - O `UserOpManager` √© essencial para permitir que os usu√°rios interajam com a plataforma sem precisar de ETH para gas
   - Deve ser integrado com o `GiftCardNFT` para permitir transa√ß√µes sem carteira

2. **Para a Token Bound Account (TBA)**:
   - O `ERC6551Registry` e `ERC6551Account` s√£o essenciais para vincular o saldo ao NFT
   - O saldo √© gerenciado pela TBA, n√£o pela carteira do usu√°rio

3. **Para a privacidade**:
   - O `GiftyZK` √© respons√°vel pela integra√ß√£o com ZK Proofs
   - Deve ser integrado com o `GiftCardNFT` para permitir resgate privado

4. **Para a integra√ß√£o com Cielo**:
   - O `POS Integration` √© cr√≠tico para a ado√ß√£o em larga escala
   - Deve ser implementado como um microservi√ßo na camada de aplica√ß√£o

## üìù Resumo para o Lovable

Para implementar o GIFTY no Lovable, voc√™ precisa:

1. **Implementar os contratos blockchain**:
   - `ERC6551Registry`
   - `ERC6551Account`
   - `GiftCardNFT`
   - `UserOpManager` (ERC-4337)
   - `GiftyZK` (ZK Proofs)

2. **Criar a interface de usu√°rio**:
   - Web App para cria√ß√£o de gift cards
   - Fluxo de resgate com ZK Proofs

3. **Implementar a integra√ß√£o com Cielo**:
   - Para resgate em POS f√≠sico

4. **Validar os resultados**:
   - Custo de emiss√£o <0,5%
   - Tempo de resgate <1 minuto
   - UX "sem carteira" com >80% de sucesso

Esta arquitetura permite que voc√™ implemente o MVP do GIFTY no Lovable, com foco na experi√™ncia do usu√°rio e na integra√ß√£o com a tecnologia blockchain.